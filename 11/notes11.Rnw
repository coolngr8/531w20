%\documentclass[handout]{beamer}
\documentclass{beamer}
\usepackage{natbib}
\bibliographystyle{dcu}
\input{../header.tex}
\newcommand\CHAPTER{11}


\newcommand\eqspace{\quad\quad\quad}
\newcommand\eqskip{\vspace{2.5mm}}

\newcommand\dist[2]{\mathrm{#1}\left(#2\right)}
\newcommand\dlta{\Delta}

\newcommand\myeq{\hspace{10mm}}

% \newcommand\answer[2]{\textcolor{blue}{#2}} % to show answers
% \newcommand\answer[2]{{\color{blue}{#2}}} % to show answers
\newcommand\answer[2]{#1} % to show blank space

<<R_answer,echo=F,purl=F>>=
# ANS = TRUE
 ANS=FALSE
@

\usepackage{bbm} % for blackboard bold 1

\begin{document}

% knitr set up
<<knitr_opts,echo=F,cache=F,purl=F>>=
library(knitr)
opts_chunk$set(
#  cache=FALSE,
  cache=TRUE,
  eval=TRUE,
  include=TRUE,
  echo=TRUE,
  purl=TRUE,
  cache.path=paste0("tmp/cache"),
  dev='png',
  dev.args=list(bg='transparent'),
  dpi=300,
  error=FALSE,
  fig.pos="h!",
  fig.align='center',
  fig.height=4,fig.width=6.83,
  fig.lp="fig:",
  fig.path=paste0("tmp/figure"),
  fig.show='asis',
  highlight=TRUE,
  message=FALSE,
  progress=TRUE,
  prompt=FALSE,
#  results='asis',
  results="markup",
  size='small',
  strip.white=TRUE,
  tidy=FALSE,
  warning=FALSE
#  comment=NA # to remove ## on output
)
options(width = 60) # number of characters in R output before wrapping

@

<<setup,echo=F,results=F,cache=F>>=
myround<- function (x, digits = 1) {
  # taken from the broman package
  if (digits < 1) 
    stop("This is intended for the case digits >= 1.")
  if (length(digits) > 1) {
    digits <- digits[1]
    warning("Using only digits[1]")
  }
  tmp <- sprintf(paste("%.", digits, "f", sep = ""), x)
  zero <- paste0("0.", paste(rep("0", digits), collapse = ""))
  tmp[tmp == paste0("-", zero)] <- zero
  tmp
}

set.seed(2050320976)

options(
  keep.source=TRUE,
  encoding="UTF-8"
)

@



<<prelims,echo=F,cache=F>>=
set.seed(594709947L)
library(ggplot2)
theme_set(theme_bw())
library(plyr)
library(reshape2)
library(foreach)
#library(doMC)
library(pomp)
stopifnot(packageVersion("pomp")>="2.0")
@


\begin{frame}[fragile]
\frametitle{Chapter \CHAPTER. Dynamic models and their simulation by Euler's method}


\hspace{3cm} {\large \bf Objectives}

\vspace{3mm}

\begin{enumerate}


\item Dynamic systems can often be represented in terms of {\it flows} between {\it compartments}. We will develop the concept of a \myemph{compartment model} for which we specify {\it rates} for the flows between compartments.

\item  We develop deterministic and stochastic interpretations of a compartment model.

\item We introduce Euler's method to simulate from dynamic models, and we apply it to both deterministic and stochastic compartment models.

\end{enumerate}

\end{frame}

\begin{frame}[fragile]
\frametitle{Compartment models}

\bi

\item A \myemph{compartment model} is a model associated with a \myemph{flow diagram} specifying how objects move between categories, called \myemph{compartments}.

\item We will need equations to specify formally what the flow diagram means.

\item One major applications of compartment models is pharmacokinetics, the study of how pharmacological drugs enter the body, move between organs, metabolize, and leave. The compartments may be the organs; the flow is movement of the drug and its metabolites between organs.

\item Another major application of compartment models is epidemiology.
Compartments are groups of people; the flow is the movement of an infectious disease through the population.

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Compartment models in epidemiology: the SIR model and its generalizations}

We will develop deterministic and stochastic representations of a susceptible-infected-recovered (SIR) system, a fundamental class of models for disease transmission dynamics. We will do this using notation which generalizes to more complex systems \citep{breto09}.


%%%%% SIR diagram
  \begin{center}
    \resizebox{0.5\textwidth}{!}{
      \Large
      \setlength{\unitlength}{5pt}
	\begin{picture}(44,20)(-5,-4)
	  \thicklines
	  \put(0,0){\framebox(6,6){S}}
	  \put(16,0){\framebox(6,6){I}}
	  \put(32,0){\framebox(6,6){R}}
	  \put(-5,3){\vector(1,0){4}}
	  \put(-5,0){$\mu^{}_{\bullet S}$}
	  \put(6,3){\vector(1,0){10}}
	  \put(9,0){$\mu_{SI}^{}$}
	  \put(11,4){\vector(0,1){5}}
	  \put(11.7,6){$\rho$}
	  \put(11,11.5){\circle{5}}
	  \put(9.8,10.6){{$C$}}
	  \put(3,-0.2){\vector(0,-1){4}}
	  \put(4,-3){$\mu^{}_{S\bullet}$}
	  \put(19,-0.2){\vector(0,-1){4}}
	  \put(20,-3){$\mu^{}_{I\bullet}$}
	  \put(22,3){\vector(1,0){10}}
	  \put(26,0){$\mu_{IR}^{}$}
	  \put(35,-0.2){\vector(0,-1){4}}
	  \put(36,-3){$\mu_{R\bullet}^{}$}
	\end{picture}
    }
  \end{center}
 
$S : \text{susceptible}$  \\
$I : \text{infected and infectious}$  \\
$R : \text{recovered and/or removed}$  \\
$C : \text{cases}$

\end{frame}

\begin{frame}[fragile]

\bi

\item We suppose that each arrow has an associated rate, so here there is a rate $\mu_{SI}(t)$ at which individuals in $S$ transition to $I$, and $\mu_{IR}$ at which individuals in $I$ transition to $R$. 

\item To account for demography (births/deaths/immigration/emmigration) we allow the possibility of a source and sink compartment, which is not usually represented on the flow diagram. We write $\mu_{{\small{\bullet}}S}$ for a rate of births into $S$, and denote mortality rates by $\mu_{S{\small\bullet}}$, $\mu_{I{\small\bullet}}$, $\mu_{R{\small\bullet}}$.

\item The rates may be either constant or varying. In particular, for a simple SIR model, the recovery rate $\mu_{IR}$ is a constant but the infection rate has the time-varying form
$$\mu_{SI}(t)=\beta \, I(t),$$
with $\beta$ being the \myemph{contact rate}. For the simplest SIR model, ignoring demography, we set
$$ \mu_{{\small{\bullet}}S}=\mu_{S{\small{\bullet}}}=\mu_{I{\small{\bullet}}}=\mu_{R{\small{\bullet}}}=0.$$

\ei

\end{frame}
\begin{frame}[fragile]
\frametitle{General notation for compartment models}
\bi
\item To develop a systemtic notation, it turns out to be convenient to keep track of the flows between compartments as well as the number of individuals in each compartment. Let
$$N_{SI}(t)$$
count the number of individuals who have transitioned from $S$ to $I$ by time $t$. We say that $N_{SI}(t)$ is a \myemph{counting process}. A similarly constructed process
$$N_{IR}(t)$$
counts individuals transitioning from $I$ to $R$. To include demography, we could keep track of birth and death events by the counting processes $N_{{\small{\bullet}} S}(t)$, $N_{S{\small{\bullet}}}(t)$, $N_{I{\small{\bullet}}}(t)$, $N_{R{\small{\bullet}}}(t)$.

\item For discrete population compartment models, the flow counting processes are non-decreasing and integer valued.

\item For continuous population compartment models, the flow counting processes are non-decreasing and real valued.

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Recovering compartment processes from counting proceeses}

\bi

\item The numbers of people in each compartment can be computed via these counting processes. Ignoring demography, we have:
$$\begin{array}{lcl} 
S(t)&=& S(0) - N_{SI}(t)
\\
I(t)&=& I(0) + N_{SI}(t) - N_{IR}(t)
\\
R(t) &=& R(0) + N_{IR}(t)
\end{array}$$

\item These equations represent something like {\it conservation of mass}, or {\it what goes in must come out}. 


\ei

\end{frame}

\begin{frame}[fragile]


\frametitle{The ordinary differential equation (ODE) interpretation of the SIR model}

Together with initial conditions specifying $S(0)$, $I(0)$ and $R(0)$, we just need to write down ODEs for the flow counting processes. These are,
$$ dN_{SI}/dt = \mu_{SI}(t) \, S(t),$$
$$ dN_{IR}/dt = \mu_{IR}\, I(t).$$


\end{frame}

\begin{frame}[fragile]

\frametitle{The simple continuous-time Markov chain interpretation of the SIR model}

\bi

\item Continuous-time Markov chains are the basic tool for building discrete population epidemic models.

\item The Markov property lets us specify a model by the transition probabilities on small intervals (together with the initial conditions). For the SIR model, we have

$$\begin{array}{lcl}
\prob\big[N_{SI}(t+\delta)\equals N_{SI}(t)+1\big] &=& \mu_{SI}(t) \, S(t) \delta + o(\delta)
\\
\prob\big[N_{SI}(t+\delta)\equals N_{SI}(t)\big] &=& 1-\mu_{SI}(t) \, S(t) \delta + o(\delta)
\\
\prob\big[N_{IR}(t+\delta)\equals N_{IR}(t)+1\big] &=& \mu_{IR} \, I(t) \delta + o(\delta)
\\
\prob\big[N_{IR}(t+\delta)\equals N_{IR}(t)\big] &=& 1-\mu_{IR}(t) \, I(t) \delta + o(\delta)
\end{array}$$

\item Here, we are using \myemph{little o notation}
We write 
$ h(\delta)=o(\delta)$
to mean 
$ \lim_{\delta\to 0} \frac{h(\delta)}{\delta} = 0$.
\ei
\end{frame}

\begin{frame}[fragile]

\myquestion. What is the link between little $o$ notation and the derivative?

Explain why 
$$f(x+\delta)=f(x)+ \delta g(x) + o(\delta)$$ 
is the same statement as
$$ \frac{df}{dx} = g(x).$$
What considerations might help you choose which of these notations to use?

\answer{\vspace{50mm}}{todo}

\end{frame}

\begin{frame}[fragile]

\myquestion. From Markov chain to ODE.
Find the expected value of $N_{SI}(t+\delta)-N_{SI}(t)$ and $N_{IR}(t+\delta)-N_{IR}(t)$ given the current state, $S(t)$, $I(t)$ and $R(t)$. Take the limit as $\delta\to 0$ and show that this gives the ODE model.

\answer{\vspace{50mm}}{todo}

\end{frame}

\begin{frame}[fragile]

\frametitle{Simple counting processes}

\bi

\item A \myemph{simple counting process} is one which cannot count more than one event at a time.

\item Technically, the SIR Markov chain model we have written is simple. One may want to model the extra randomness resulting from multiple simultaneous events: someone sneezing in a bus; large gatherings at football matches; etc. This extra randomness may even be critical to match the variability in data. 

\item Later in the course, we may see situations where this extra randomness plays an important role. Setting up the model using counting processes, as we have done here, turns out to be useful for this.

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Euler's method for ordinary differential equations (ODEs)}

\bi

\item Euler (1707-1783) wanted a numeric solution of an ODE $dx/dt = h(x)$
with an initial condition $x(0)$. 

\item He supposed this ODE has some true solution $x(t)$ which could not be worked out analytically. He therefore wished to approximate $x(t)$ numerically.

\item He initialized the numerical solution at the known starting value, 
$$\tilde x(0)=x(0).$$

\item For $k=1,2,\dots$, he supposed that the gradient $dx/dt$ is approximately constant over the small time interval $k\delta\le t\le (k+1)\delta$. 

\item Therefore, he defined
$$\tilde x\big( \,(k+1)\delta\,\big) = \tilde x( k\delta) + \delta \, h\big(\, \tilde x(k\delta)\,\big).$$
This only defines $\tilde x(t)$ when $t$ is a multiple of $\delta$, but suppose $\tilde x(t)$ is constant between these discrete times.

\item We now have a numerical scheme, stepping forwards in time increments of size $\delta$, that can be readily evaluated by computer (or by hand, if you are Euler). 

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Euler's method versus other numerical methods}
\bi
\item Mathematical analysis of Euler's method says that, as long as the function $h(x)$ is not too exotic, then $x(t)$ is well approximated by $\tilde x(t)$  when the discretization time-step, $\delta$, is sufficiently small.

\item Euler's method is not the only numerical scheme to solve ODEs. More advanced schemes have better convergence properties, meaning that the numerical approximation is closer to $x(t)$. However, there are 3 reasons we choose to lean heavily on Euler's method:

\begin{enumerate}
\item Euler's method is the simplest (following the KISS principle).

\item Euler's method extends naturally to stochastic models, both continuous-time Markov chains models and stochastic differential equation (SDE) models.

\item Close approximation of the numerical solutions to a continuous-time model is less important than it may at first appear, a topic to be discussed.
\end{enumerate}
\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Some comments on using continuous-time models and discretized approximations}

\bi
\item In some physical and engineering situations, a system follows an ODE model closely. For example, Newton's laws provide a very good approximation to the motions of celestial bodies. 

\item In many biological situations, ODE models only become close mathematical approximations to reality at reasonably large scale. On small temporal scales, models cannot usually capture the full scope of biological variation and biological complexity. 

\item If we are going to expect substantial error in using $x(t)$ to model a biological system, maybe the numerical solution $\tilde x(t)$ represents the system being modeled as well as $x(t)$  does.

\item If our model fitting, model investigation, and final conclusions are all based on our numerical solution  $\tilde x(t)$ (i.e., we are sticking entirely to simulation-based methods) then we are most immediately concerned with how well  $\tilde x(t)$ describes the system of interest.  $\tilde x(t)$ becomes more important than the original model, $x(t)$.

\ei

\end{frame}
\begin{frame}[fragile]

\frametitle{Using numerical solutions as scientific models}
\bi
\item It is important that a scientist fully describe the numerical model $\tilde x(t)$. 
Arguably, the main purpose of the original model $x(t)$ is to give a succinct description of how $\tilde x(t)$ was constructed.

\item All numerical methods are, ultimately, discretizations. Epidemiologically, setting $\delta$ to be a day, or an hour, can be quite different from setting $\delta$ to be two weeks or a month. For continuous-time modeling, we still require that $\delta$ is small compared to the timescale of the process being modeled, so the choice of $\delta$ should not play an explicit role in the interpretation of the model.

\item Putting more emphasis on the scientific role of the numerical solution itself reminds you that the numerical solution has to do more than approximate a target model in some asymptotic sense: the numerical solution should be a sensible model in its own right. 

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Euler's method for a discrete SIR model}

\bi

\item Recall the simple continuous-time Markov chain interpretation of the SIR model without demography:
$$\begin{array}{lcl}
\prob\big[N_{SI}(t+\delta)\equals N_{SI}(t)+1\big] &=& \mu_{SI}(t) \, S(t) \delta + o(\delta),
\\
\prob\big[N_{IR}(t+\delta)\equals N_{IR}(t)+1\big] &=& \mu_{IR} \, I(t) \delta + o(\delta).
\end{array}$$

\item We look for a numerical solution with state variables $\tilde S(k\delta)$, $\tilde I(k\delta)$, $\tilde R(k\delta)$. 

\item The counting processes for the flows between compartments are $\tilde N_{SI}(t)$ and $\tilde N_{IR}(t)$. The counting processes are related to the numbers of individuals in the compartments by the same flow equations we had before:
$$\begin{array}{lcl} 
\tilde S(k\delta)&=& S(0) - \tilde N_{SI}(k\delta)
\\
\tilde I(k\delta)&=& I(0) + \tilde N_{SI}(k\delta) - \tilde N_{IR}(k\delta)
\\
\tilde R(k\delta) &=& R(0) + \tilde N_{IR}(k\delta)
\end{array}$$

\item We focus on a numerical solution to $N_{SI}(t)$, since the same methods can also be applied to $N_{IR}(t)$.

\ei

\end{frame}
\begin{frame}[fragile]
\frametitle{Three different stochastic Euler solutions at times $t=k\delta$}

\begin{enumerate}
\item A Poisson approximation.
$$\tilde N_{SI}(t+\delta)= \tilde N_{SI}(t) + \mathrm{Poisson}\big[\mu_{SI}\big(\tilde I(t)\big) \, \tilde S(t) \,\delta\big],$$
where $\mathrm{Poisson}(\mu)$ is a Poisson random variable with mean $\mu$ and 
$$\mu_{SI}\big(\tilde I(t)\big) = \beta\, \tilde I(t).$$

\item A binomial approximation with transition probabilities approximated by rate times time.
$$\tilde N_{SI}(t+\delta) = \tilde N_{SI}(t) + \mathrm{Binomial}\big[\tilde S(t),\mu_{SI}\big(\tilde I(t)\big) \, \delta\big),$$
where $\mathrm{Binomial}(n,p)$ is a binomial random variable with mean $np$ and variance $np(1-p)$.

\item A binomial approximation with exponential transition probabilities. 

$$ \tilde N_{SI}(t+\delta)= \tilde N_{SI}(t) + \mathrm{Binomial}\big[\tilde S(t),1-\exp\big\{-\mu_{SI}\big(\tilde I(t)\big) \delta\big\}\big].$$

\end{enumerate}

\bi
\item Conceptually, it is simplest to think of (1) or (2). Numerically, it is usually preferable to implement (3). 
\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Compartment models as stochastic differential equations}

\bi
\item The Euler method extends naturally to stochastic differential equations (SDEs).

\item A natural way to add stochastic variation to an ODE $dx/dt=h(x)$ is
$$ dX/dt = h(X) + \sigma \, dB/dt$$
where $\{B(t)\}$ is Brownian motion and so $dB/dt$ is Brownian noise.

\item An Euler approximation $\tilde X(t)$ is 
$$ \tilde X\big( \,(k+1)\delta\,\big) = \tilde X( k\delta) + \delta\, h\big(\, \tilde X(k\delta)\,\big) + \sigma \sqrt{\delta} \, Z_k$$
where $Z_1,Z_2,\dots$ is a sequence of independent standard normal random variables, i.e.,  $Z_k\sim N[0,1]$.

\item Although SDEs are often considered an advanced topic in probability, the Euler approximation doesn't demand much more than familiarity with the normal distribution.

\ei

\end{frame}


\begin{frame}[fragile]

\myquestion.

(a) Write down a stochastic Euler method for an SDE representation of the SIR model.

\answer{\vspace{20mm}}{todo}

(b) Consider some difficulties that might arise with non-negativity constraints, and propose some practical way one might deal with that issue.

\answer{\vspace{20mm}}{todo}

\bi

\item A useful method to deal with positivity constraints is to use Gamma noise rather than Brownian noise [@bhadra11,@laneri10]. SDEs driven by Gamma noise can be investigated by Euler solutions simply by replacing the Gaussian noise by an appropriate Gamma distribution.

\ei


\end{frame}

\begin{frame}[fragile]

\frametitle{Conceptual exercise: Euler's method vs Gillspie's algorithm}

\bi

\item A widely used, exact simulation method for continuous time Markov chains is Gillspie's algorithm.
%% (https://en.wikipedia.org/wiki/Gillespie_algorithm
We do not put much emphasis on Gillespie's algorithm here. Why? When would you prefer an implementation of Gillespie's algorithm to an Euler solution?

\item Numerically, Gillespie's algorithm is often approximated using so-called
tau-leaping
%%(https://en.wikipedia.org/wiki/Tau-leaping)
methods. These are closely related to Euler's approach. Is it reasonable to call a suitable Euler approach a tau-leaping method?

\ei

\end{frame}

\begin{frame}[fragile]

\frametitle{Compartmental models in \package{pomp}}

As an example that we can probe in some depth, we look at an isolated outbreak of influenza that occurred in a boarding school for boys in England [@anonymous78]. 
Let's examine the data:
<<flu-data1>>=
bsflu <- read.table("bsflu_data.txt")
head(bsflu,5)
@
The variable \code{B} refers to boys confined to bed and \code{C} to boys in convalescence.

\end{frame}

\begin{frame}[fragile]

<<flu-data2,echo=F,out.width="8cm",fig.width=6>>=
#bsflu <- subset(bsflu,select=c(day,B))
ggplot(data=bsflu,aes(x=day,y=B))+geom_line()+geom_point()
@

\bi
\item
Let's restrict our attention for the moment to the \code{B} variable.
\item Assume for now that that $B$ indicates the number of boys confined to bed the preceding day and that the disease follows the simple SIR model.
\item We seek to estimate the parameters of the SIR and then to decide whether or not the SIR model is an adequate description of these data.
\item Note: $\mu_{IR}$ is often called $\gamma$ and $\mu_{SI}(t)$ is called $\lambda(t)$.
\ei

\end{frame}

\begin{frame}[fragile]
\frametitle{Viewing the SIR as a POMP model}

\bi
\item The unobserved state variables, in this case, are the numbers of individuals, $S$, $I$, $R$ in the S, I, and R compartments, respectively.
\item
It is reasonable in this case to view the population size $N=S+I+R$, as fixed.
\item 
The numbers that actually move from one compartment to another over any particular time interval are modeled as stochastic processes.
\item
In this case, we'll assume that the stochasticity is purely demographic, i.e., that each individual in a compartment at any given time faces the same risk of exiting the compartment.
\ei
\end{frame}

\begin{frame}[fragile]
\frametitle{Implementing the SIR POMP model in \package{pomp}}

\bi
\item We saw three different Euler methods that could be used for an \code{rprocess} Csnippet, and we use method (3) above.

\item The number of individuals, $\dlta{N_{SI}}$, moving from S to I over interval $\dlta{t}$ as $$\dlta{N_{SI}} \sim \dist{Binomial}{S,1-e^{-\lambda\dlta{t}}},$$ and the number moving from I to R as $$\dlta{N_{IR}} \sim \dist{Binomial}{I,1-e^{-\gamma\dlta{t}}}.$$
\ei
<<rproc1,purl=FALSE>>=
sir_step <- Csnippet("
  double dN_SI = rbinom(S,1-exp(-Beta*I/N*dt));
  double dN_IR = rbinom(I,1-exp(-gamma*dt));
  S -= dN_SI;
  I += dN_SI - dN_IR;
  R += dN_IR;
")
@
\end{frame}

\begin{frame}[fragile]
\frametitle{Initial conditions}
At day zero, we'll assume that $I=1$ and $R=0$, but we don't know how big the school is, so we treat $N$ as a parameter to be estimated and let $S(0)=N-1$.
Thus an initializer \code{Csnippet} is
<<init1,purl=FALSE>>=
sir_rinit <- Csnippet("
  S = N-1;
  I = 1;
  R = 0;
")
@
We fold these \code{Csnippet}s, with the data, into a \code{pomp} object thus:
<<rproc1-pomp,purl=FALSE>>=
pomp(subset(bsflu,select=c(day,B)),
     time="day",t0=0,rprocess=euler(sir_step,delta.t=1/6),
     rinit=sir_rinit,paramnames=c("N","Beta","gamma"),
     statenames=c("S","I","R")) -> sir
@
\bi
\item Here, we specify the \code{pomp} object one piece at a time. Once pieces are debugged, you can specify them all at the same time.
\ei
\end{frame}

\begin{frame}[fragile]

\frametitle{Toward a measurement model}

Now let's assume that the case reports, $B$, result from a process by which new infections result in confinement with probability $\rho$, which we can think of as the probability that an infection is severe enough to be noticed by the school authorities.
Since confined cases have, presumably, a much lower transmission rate, let's treat $B$ as being a count of the number of boys who have moved from I to R over the course of the past day.
We need a variable to track this.
Let's modify our \code{Csnippet} above, adding a variable $H$ to track the incidence.
We'll then replace the \code{rprocess} with the new one.

<<rproc2>>=
sir_step <- Csnippet("
  double dN_SI = rbinom(S,1-exp(-Beta*I/N*dt));
  double dN_IR = rbinom(I,1-exp(-gamma*dt));
  S -= dN_SI;
  I += dN_SI - dN_IR;
  R += dN_IR;
  H += dN_IR;
")
@
\end{frame}

\begin{frame}[fragile]

<<rproc2b>>=
sir_rinit <- Csnippet("
  S = N-1;
  I = 1;
  R = 0;
  H = 0;
")

pomp(sir,rprocess=euler(sir_step,delta.t=1/6),rinit=sir_rinit,
     paramnames=c("Beta","gamma","N"),
     statenames=c("S","I","R","H")) -> sir
@

\end{frame}

\begin{frame}[fragile]
Now, we'll model the data, $B$, as a binomial process,
$$B_t \sim \dist{Binomial}{H(t)-H(t-1),\rho}.$$
But we have a problem, since at time $t$, the variable \code{H} we've defined will contain $H(t)$, not $H(t)-H(t-1)$.
We can overcome this by telling \code{pomp} that we want \code{H} to be set to zero immediately following each observation.
We do this by setting the \code{zeronames} argument to \code{pomp}:
<<zero1>>=
pomp(sir,zeronames="H") -> sir
@

Now, to include the observations in the model, we must write both a \code{dmeasure} and an \code{rmeasure} component:
<<meas-model>>=
dmeas <- Csnippet("lik = dbinom(B,H,rho,give_log);")
rmeas <- Csnippet("B = rbinom(H,rho);")
@
and put these into our \code{pomp} object:
<<add-meas-model>>=
sir <- pomp(sir,rmeasure=rmeas,dmeasure=dmeas,statenames="H",paramnames="rho")
@

\end{frame}

\begin{frame}[fragile]
\frametitle{Some intuition about plausible parameter values}

\bi
\item We need some parameters as a starting point, so we can perform some simulations to check whether things are working.
\item
In the data, it looks like there were a total of \Sexpr{sum(bsflu$B)} \code{infections}, so the population size, $N$, must be somewhat in excess of this number.
\item
We can use the final-size equation
$$R_0 = -\frac{\log{(1-f)}}{f},$$
where $f=R(\infty)/N$ is the final size of the epidemic, together with the idea that $R_0$ must be, say, around 1.5, to estimate that $f\approx 0.6$, whence $N\approx 2600$.
\item 
If the infectious period is roughly 1 day, then $1/\gamma \approx 1~\text{da}$ and $\beta = \gamma\,R_0 \approx 1.5~\text{da}^{-1}$.
\ei
\end{frame}

\begin{frame}[fragile]
<<sir_sim>>=
sims <- simulate(sir,params=c(Beta=1.5,gamma=1,rho=0.9,N=2600),
                 nsim=20,format="data.frame",include=TRUE)
ggplot(sims,mapping=aes(x=day,y=B,group=.id,color=.id=="data"))+
  geom_line()+guides(color=FALSE)
@


\end{frame}

\begin{frame}[fragile]

\myquestion. Explore the SIR model by simulation.
Fiddle with the parameters to see if you can't find parameters for which the data are a more plausible realization.

\answer{\vspace{50mm}}{todo}

\end{frame}

\begin{frame}[fragile]

\frametitle{The SIR model to include latency: The SEIR model}

Below is a diagram of the so-called SEIR model.
This differs from the SIR model in that infected individuals must pass a period of latency before becoming infectious.

\vspace{-3mm}

%%%%% SEIR diagram
  \begin{center}
    \resizebox{0.5\textwidth}{!}{
      \Large
      \setlength{\unitlength}{5pt}
	\begin{picture}(60,20)(-21,-4)
	  \thicklines
	  \put(-16,0){\framebox(6,6){S}}
	  \put(0,0){\framebox(6,6){E}}	  
	  \put(16,0){\framebox(6,6){I}}
	  \put(32,0){\framebox(6,6){R}}
	  \put(-21,3){\vector(1,0){4}}
	  \put(-21,0){$\mu^{}_{\bullet S}$}
          \put(-10,3){\vector(1,0){10}}
	  \put(-7,0){$\mu_{SE}^{}$}	 	  
	  \put(6,3){\vector(1,0){10}}
	  \put(9,0){$\mu_{EI}^{}$}
	  \put(11,4){\vector(0,1){5}}
	  \put(11.7,6){$\rho$}
	  \put(11,11.5){\circle{5}}
	  \put(9.8,10.6){{$C$}}
	  \put(-13,-0.2){\vector(0,-1){4}}
	  \put(-12,-3){$\mu^{}_{S\bullet}$}
	  \put(3,-0.2){\vector(0,-1){4}}
	  \put(4,-3){$\mu^{}_{E\bullet}$}
	  \put(19,-0.2){\vector(0,-1){4}}
	  \put(20,-3){$\mu^{}_{I\bullet}$}
	  \put(22,3){\vector(1,0){10}}
	  \put(26,0){$\mu_{IR}^{}$}
	  \put(35,-0.2){\vector(0,-1){4}}
	  \put(36,-3){$\mu_{R\bullet}^{}$}
	\end{picture}
    }
  \end{center}

\myquestion.
Modify the codes above to construct a \code{pomp} object containing the flu data and an SEIR model. As before, $\mu_{\bullet S}=\mu_{S\bullet}=\mu_{E\bullet}\mu_{I\bullet}\mu_{R\bullet}=0$ is appropriate here. Perform simulations as above and adjust parameters to get a sense of whether improvement is possible by including a latent period.

\answer{\vspace{5mm}}{todo}

\bi
\item Focus on homework before attempting extended questions from the nodes. Initially, think about whether in principle you know how to proceed.
\ei
\end{frame}

\begin{frame}[fragile]

\frametitle{Rethinking the boarding-school flu data}

\bi
\item In the preceding, we assumed that $B_t$ represents the number of boys \myemph{sent} to bed on day $t$.

\item In fact, as described by \citet{anonymous78}, $B_t$ represents the total number of boys \myemph{in} bed on day $t$.
\item
Boys were confined for more than one day, so the data count each infection multiple times.
\item 
Additionally, we learn from \citet{anonymous78} that $N=763$ boys were at risk and $512$ boys in total spent between 3 and 7 days away from class (either in bed or convalescent).
\item
The data on the number of boys, $C_t$, convalescent at day $t$ therefore informs convalescent time.
\item 
Since $1540~\text{boy-da}/512~\text{boy} \approx 3~\text{da}$, we know that the average duration spent in bed was 3 days and, since $\sum_t\!C_t=\Sexpr{ sum(bsflu$C)}$, we can infer that the average time spent convalescing was $\Sexpr{ sum(bsflu$C)}~\text{boy-da}/512~\text{boy} \approx \Sexpr{ signif(sum(bsflu$C)/512,2)}~\text{da}$.
\ei
\end{frame}

\begin{frame}[fragile]

\myquestion. Formulate a model with both confinement and convalescent stages.
Implement it in \package{pomp} using a compartmental model like that diagrammed below.

%%%%% SIR_1R_2 diagram
  \begin{center}
    \resizebox{0.5\textwidth}{!}{
      \Large
      \setlength{\unitlength}{5pt}
	\begin{picture}(60,20)(-5,-4)
	  \thicklines
	  \put(0,0){\framebox(6,6){$S$}}
	  \put(16,0){\framebox(6,6){$I$}}
	  \put(32,0){\framebox(6,6){$R_1$}}
	  \put(48,0){\framebox(6,6){$R_2$}}
%	  \put(-5,3){\vector(1,0){4}}
%	  \put(-5,0){$\mu^{}_{\bullet S}$}
	  \put(6,3){\vector(1,0){10}}
	  \put(9,0){$\mu_{SI}^{}$}
%	  \put(11,4){\vector(0,1){5}}
%	  \put(11.7,6){$\rho$}
%	  \put(11,11.5){\circle{5}}
%	  \put(9.8,10.6){{$C$}}
%	  \put(3,-0.2){\vector(0,-1){4}}
%	  \put(4,-3){$\mu^{}_{S\bullet}$}
%	  \put(19,-0.2){\vector(0,-1){4}}
%	  \put(20,-3){$\mu^{}_{I\bullet}$}
	  \put(22,3){\vector(1,0){10}}
	  \put(25,0){$\mu_{IR_1}^{}$}
	  \put(38,3){\vector(1,0){10}}
	  \put(40,0){$\mu_{R_1R_2}^{}$}
%	  \put(35,-0.2){\vector(0,-1){4}}
%	  \put(36,-3){$\mu_{R_1\bullet}^{}$}
%	  \put(51,-0.2){\vector(0,-1){4}}
%	  \put(52,-3){$\mu_{R_2\bullet}^{}$}
	\end{picture}
    }
  \end{center}
 
You will have to give some thought to just how to model the relationship between the data ($B$ and $C$) and the state variables.
How many parameters can reasonably be fixed?  How many must be estimated?
Obtain some ballpark estimates of the parameters and simulate to see if you can plausibly explain the data as a realization of this model.

\end{frame}

\begin{frame}[fragile]
\frametitle{Acknowledgments and License}

\bi
\item Produced with R version \Sexpr{ getRversion()} and \package{pomp} version \Sexpr{ packageVersion("pomp")}.

\item These notes build on previous versions at \url{ionides.github.io/531w16} and \url{ionides.github.io/531w18}. 
\item Those notes draw on material developed for a short course on Simulation-based Inference for Epidemiological Dynamics (\url{http://kingaa.github.io/sbied/}) by Aaron King and Edward Ionides, taught at the University of Washington Summer Institute in Statistics and Modeling in Infectious Diseases, from 2015 through 2018.
\item
Licensed under the Creative Commons attribution-noncommercial license, \url{http://creativecommons.org/licenses/by-nc/3.0/}.
Please share and remix noncommercially, mentioning its origin.  
\includegraphics[width=2cm]{cc-by-nc.png}
\ei

\end{frame}


\begin{frame}[allowframebreaks]
\frametitle{References}
\bibliography{notes11.bib}
\end{frame}

\end{document}
